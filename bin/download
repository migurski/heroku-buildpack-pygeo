#!/usr/bin/env python

from sys import argv
from os.path import exists, splitext
from os import write, close
from tempfile import mkdtemp
from subprocess import Popen
from zipfile import ZipFile
from hashlib import md5

print '-----> Preparing datasource'

try:
    url, build, cache = argv[1:]
except ValueError:
    print 'Usage: %s <url> <build dir> <cache dir>' % argv[0]
    exit(1)

file = '%s/%s.zip' % (cache, md5(url).hexdigest())

if not exists(file):
    print '       Downloading', url, 'to', file
    curl = Popen(('curl', '-o', file, '-L', url))
    curl.wait()

src_name = None
tmp_dir = mkdtemp()

with ZipFile(file, 'r') as zip:
    for name in sorted(zip.namelist()):
        base, ext = splitext(name)
    
        if ext not in ('.dbf', '.prj', '.shp', '.shx', '.json'):
            continue
        
        tmp_path = tmp_dir + '/datasource' + ext
        print '      ', name, '-->', tmp_path
        
        with open(tmp_path, 'w') as tmp:
            tmp.write(zip.read(name))
            
        if ext in ('.shp', '.json'):
            src_name = tmp_path

if src_name:
    print ('/app/gdal/bin/ogr2ogr', build + '/datasource.shp', src_name)
    ogr2ogr = Popen(('/app/gdal/bin/ogr2ogr', build + '/datasource.shp', src_name))
    ogr2ogr.wait()
